# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (c) 2025 - present Incudo Labs Inc.
#
# This file is part of Orion's Belt Project (https://github.com/IncudoLABS/orions-belt).
#
# Published by the IncudoLABS.
# Original author: Marko Sarunac <128757181+SaruWiz@users.noreply.github.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Script ID: UNASSIGNED
---
#
# Playbook: UNASSIGNED_configure_vtp.yml
#
# Description: This playbook configures VTP (VLAN Trunking Protocol) on Cisco IOS devices.
#
# Requirements:
#   - Ansible `cisco.ios` collection must be installed (`ansible-galaxy collection install cisco.ios`).
#   - An Ansible inventory file with the target switches defined in `vtp_master` and `vtp_clients` groups.
#   - Connection variables and credentials must be defined in inventory or an encrypted vault.
#
# Example Inventory (e.g., inventory.ini):
#   [vtp_master]
#   switch1 ansible_host=192.168.1.10
#
#   [vtp_clients]
#   switch2 ansible_host=192.168.1.11
#   switch3 ansible_host=192.168.1.12
#
#   [cisco_switches:children]
#   vtp_master
#   vtp_clients
#
#   [cisco_switches:vars]
#   ansible_network_os=cisco.ios.ios
#   ansible_connection=network_cli
#   ansible_become=yes
#   ansible_become_method=enable
#   ansible_user={{ cisco_username }}
#   ansible_password={{ cisco_password }}
#   ansible_become_password={{ cisco_enable_password }}
#

- name: "VTP Configuration: Configure Cisco VTP"
  hosts: "{{ target_hosts }}"
  gather_facts: false
  connection: network_cli
  become: yes
  become_method: enable

  tasks:
    - name: Gather VTP status from one host to check
      cisco.ios.ios_command:
        commands: "show vtp status"
      register: vtp_status_output
      run_once: true

    - name: Extract current VTP domain
      run_once: true
      ansible.builtin.set_fact:
        current_vtp_domain: "{{ (vtp_status_output.stdout[0] | regex_findall('VTP Domain Name\\s+:\\s*(\\S+)') | first) | default('Not Set') }}"

    - name: Extract current VTP mode
      run_once: true
      ansible.builtin.set_fact:
        current_vtp_mode: "{{ (vtp_status_output.stdout[0] | regex_findall('Feature VLAN:[\\s\\S]*?VTP Operating Mode\\s+:\\s*(\\w+)') | first) | default('Not Set') }}"

    - name: Extract current VTP version
      run_once: true
      ansible.builtin.set_fact:
        current_vtp_version: "{{ (vtp_status_output.stdout[0] | regex_findall('VTP version running\\s+:\\s*(\\d+)') | first) | default('Not Set') }}"

    - name: Ask if user wants to change VTP settings
      ansible.builtin.pause:
        prompt: "Current VTP settings on one device are:\n  Domain: {{ current_vtp_domain }}\n  Mode: {{ current_vtp_mode }}\n  Version: {{ current_vtp_version }}\n\nDo you want to change the VTP settings for all targeted devices? (yes/no)"
      register: want_to_change
      run_once: true

    - name: Prompt for new VTP settings
      when: want_to_change.user_input | lower == 'yes'
      run_once: true
      block:
        - name: Prompt for new VTP domain
          ansible.builtin.pause:
            prompt: "Enter the new VTP domain name"
          register: new_vtp_domain_prompt

        - name: Ask if user wants to set VTP password
          ansible.builtin.pause:
            prompt: "Do you want to set a VTP password? (yes/no)"
          register: want_password_prompt

        - name: Prompt for new VTP password
          when: want_password_prompt.user_input | lower == 'yes'
          ansible.builtin.pause:
            prompt: "Enter the new VTP password"
          register: new_vtp_password_prompt

        - name: Prompt for new VTP version
          ansible.builtin.pause:
            prompt: "Enter the new VTP version (1, 2, or 3) [default: 2]"
          register: new_vtp_version_prompt

    - name: Set default VTP version if not provided
      when: want_to_change.user_input | lower == 'yes'
      run_once: true
      ansible.builtin.set_fact:
        vtp_version_to_use: "{{ new_vtp_version_prompt.user_input | default('2') }}"

    - name: Configure VTP (with password)
      when: 
        - want_to_change.user_input | lower == 'yes'
        - want_password_prompt.user_input | lower == 'yes'
      cisco.ios.ios_config:
        lines:
          - "vtp domain {{ new_vtp_domain_prompt.user_input }}"
          - "vtp version {{ vtp_version_to_use }}"
          - "vtp password {{ new_vtp_password_prompt.user_input }}"
      notify: save_config

    - name: Configure VTP (without password)
      when: 
        - want_to_change.user_input | lower == 'yes'
        - want_password_prompt.user_input | lower != 'yes'
      cisco.ios.ios_config:
        lines:
          - "vtp domain {{ new_vtp_domain_prompt.user_input }}"
          - "vtp version {{ vtp_version_to_use }}"
      notify: save_config

  handlers:
    - name: save_config
      listen: "save_config"
      cisco.ios.ios_config:
        save_when: modified