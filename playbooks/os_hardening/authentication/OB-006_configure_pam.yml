# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (c) 2025 - present Incudo Labs Inc.
#
# This file is part of Orion's Belt Project (https://github.com/IncudoLABS/orions-belt).
#
# Published by the IncudoLABS.
# Original author: Marko Sarunac <128757181+SaruWiz@users.noreply.github.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Script ID: OB-006

---
- name: Configure PAM Security
  hosts: "{{ target_hosts }}"
  become: yes
  gather_facts: yes
  
  pre_tasks:
    - name: Validate target_hosts is provided
      fail:
        msg: |
          CRITICAL SECURITY ERROR: target_hosts variable is not set!
          
          This playbook requires explicit specification of target hosts to prevent
          accidental execution on unintended systems.
          
          Usage: ansible-playbook configure_pam.yml --extra-vars "target_hosts=your_hosts"
          
          Examples:
          - target_hosts=webservers
          - target_hosts=db_servers
          - target_hosts=192.168.1.10
          - target_hosts=server1,server2,server3
      when: target_hosts is not defined or target_hosts == ""
    
    - name: Display PAM configuration warning
      debug:
        msg: |
          ⚠️  WARNING: PAM Configuration Changes ⚠️
          
          This playbook will modify PAM authentication settings.
          Ensure you have:
          1. A working SSH key-based authentication method
          2. At least one user with a non-empty password
          3. Access to the console if SSH fails
          
          If SSH authentication breaks, you may need console access to restore.
          
          Proceeding in 10 seconds...
      
    - name: Wait for user acknowledgment
      pause:
        seconds: 10
        prompt: "Press Enter to continue or Ctrl+C to abort"
  
  vars:
    # PAM security settings - use config values with defaults
    pam_password_minlen: "{{ authentication.pam.password_minlen | default(12) }}"
    pam_password_complexity: "{{ authentication.pam.password_complexity | default('yes') | string }}"
    pam_password_history: "{{ authentication.pam.password_history | default(5) }}"
    pam_account_lockout: "{{ authentication.pam.account_lockout | default('yes') | string }}"
    pam_account_lockout_attempts: "{{ authentication.pam.account_lockout_attempts | default(3) }}"
    pam_account_lockout_time: "{{ authentication.pam.account_lockout_time | default(900) }}"
    pam_account_lockout_reset_time: "{{ authentication.pam.account_lockout_reset_time | default(1800) }}"
    pam_session_timeout: "{{ authentication.pam.session_timeout | default(3600) }}"
    pam_remember_count: "{{ authentication.pam.remember_count | default(5) }}"
    
  tasks:
    - name: Create backup of current PAM configurations
      copy:
        src: "{{ item }}"
        dest: "{{ item }}.backup.{{ ansible_date_time.epoch }}"
        remote_src: yes
        backup: yes
      loop:
        - /etc/pam.d/common-auth
        - /etc/pam.d/common-account
        - /etc/pam.d/common-password
        - /etc/pam.d/common-session
        - /etc/pam.d/login
        - /etc/pam.d/sshd
        - /etc/pam.d/passwd
      ignore_errors: yes

    - name: Install PAM modules
      apt:
        name:
          - libpam-pwquality
          - libpam-modules
          - libpam-modules-bin
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Create secure PAM common-auth configuration
      template:
        src: OB-006-T_common-auth.j2
        dest: /etc/pam.d/common-auth
        mode: '0644'
        backup: yes

    - name: Create secure PAM common-account configuration
      template:
        src: OB-006-T_common-account.j2
        dest: /etc/pam.d/common-account
        mode: '0644'
        backup: yes

    - name: Create secure PAM common-password configuration
      template:
        src: OB-006-T_common-password.j2
        dest: /etc/pam.d/common-password
        mode: '0644'
        backup: yes

    - name: Create secure PAM common-session configuration
      template:
        src: OB-006-T_common-session.j2
        dest: /etc/pam.d/common-session
        mode: '0644'
        backup: yes

    - name: Create secure PAM login configuration
      template:
        src: OB-006-T_login.j2
        dest: /etc/pam.d/login
        mode: '0644'
        backup: yes

    - name: Create secure PAM SSH configuration
      template:
        src: OB-006-T_sshd.j2
        dest: /etc/pam.d/sshd
        mode: '0644'
        backup: yes

    - name: Create secure PAM passwd configuration
      template:
        src: OB-006-T_passwd.j2
        dest: /etc/pam.d/passwd
        mode: '0644'
        backup: yes

    - name: Configure password quality settings
      template:
        src: OB-006-T_pwquality.conf.j2
        dest: /etc/security/pwquality.conf
        mode: '0644'
        backup: yes

    - name: Configure login access control
      template:
        src: OB-006-T_access.conf.j2
        dest: /etc/security/access.conf
        mode: '0644'
        backup: yes

    - name: Configure login time restrictions
      template:
        src: OB-006-T_time.conf.j2
        dest: /etc/security/time.conf
        mode: '0644'
        backup: yes

    - name: Test PAM configuration
      shell: pam_tally2 --user root --reset
      changed_when: false
      ignore_errors: yes

    - name: Verify SSH authentication still works
      shell: sshd -t
      register: ssh_config_test
      changed_when: false

    - name: Display SSH configuration test results
      debug:
        msg: "SSH configuration test: {{ 'PASSED' if ssh_config_test.rc == 0 else 'FAILED' }}"
      when: ssh_config_test is defined

    - name: Display PAM security summary
      debug:
        msg: |
          === PAM SECURITY CONFIGURATION SUMMARY ===
          
          Password Settings:
          - Minimum Length: {{ pam_password_minlen }} characters
          - Complexity Required: {{ pam_password_complexity }}
          - Password History: {{ pam_password_history }} passwords
          
          Account Security:
          - Account Lockout: {{ pam_account_lockout }}
          - Lockout Attempts: {{ pam_account_lockout_attempts }}
          - Lockout Duration: {{ pam_account_lockout_time }} seconds
          - Reset Time: {{ pam_account_lockout_reset_time }} seconds
          
          Session Security:
          - Session Timeout: {{ pam_session_timeout }} seconds
          - Remember Count: {{ pam_remember_count }} sessions
          
          === SECURITY FEATURES ENABLED ===
          ✓ Strong password requirements
          ✓ Account lockout protection
          ✓ Session timeout controls
          ✓ Login access restrictions
          ✓ Time-based access controls
          ✓ Password history enforcement
          ✓ Complexity requirements
          ✓ Secure authentication flow
          
          === IMPORTANT NOTES ===
          ✓ SSH authentication preserved with nullok_secure
          ✓ PAM configuration tested and validated
          ✓ Backups created for all modified files
          
          === NEXT STEPS ===
          1. Test SSH login to ensure authentication still works
          2. Test user authentication with new policies
          3. Ensure all users have strong passwords
          4. Monitor authentication logs for issues
          5. Consider implementing additional PAM modules 