# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (c) 2025 - present Incudo Labs Inc.
#
# This file is part of Orion's Belt Project (https://github.com/IncudoLABS/orions-belt).
#
# Published by the IncudoLABS.
# Original author: Marko Sarunac <128757181+SaruWiz@users.noreply.github.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Script ID: OB-008

- name: Install nftables
  apt:
    name: nftables
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Stop and disable iptables services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop:
    - iptables
    - iptables-persistent
    - ufw
  ignore_errors: yes
  when: ansible_os_family == "Debian"

- name: Enable and start nftables
  systemd:
    name: nftables
    state: started
    enabled: yes
  when: ansible_os_family == "Debian"

- name: Get local subnet information
  shell: |
    # Get primary interface
    interface=$(ip route | grep default | awk '{print $5}' | head -1)
    # Get subnet
    subnet=$(ip route | grep "$interface" | grep -v default | awk '{print $1}' | head -1)
    echo "$subnet"
  register: local_subnet
  changed_when: false

- name: Set default subnet if not detected
  set_fact:
    local_subnet: "192.168.1.0/24"
  when: local_subnet.stdout == ""

- name: Set subnet value for template
  set_fact:
    subnet_value: "{{ local_subnet.stdout | default('192.168.1.0/24') }}"

- name: Debug template variables
  debug:
    msg: |
      Template variables:
      - allowed_ports: {{ allowed_ports | default([]) }}
      - local_subnet: {{ subnet_value }}
      - subnet_value type: {{ subnet_value | type_debug }}

- name: Create nftables configuration
  copy:
    content: |
      #!/usr/sbin/nft -f
      
      # Security Hardening Firewall Configuration
      # Generated by Ansible Security Hardening Playbook
      # Local subnet: {{ subnet_value }}
      
      flush ruleset
      
      # Define tables
      table inet filter {
          # Define sets for allowed ports
          set allowed_tcp_ports {
              type inet_service
              flags interval
              auto-merge
              elements = {
                  {% for port in allowed_ports %}
                  {{ port }}{% if not loop.last %},{% endif %}
                  {% endfor %}
              }
          }
      
          # Define sets for local subnet
          set local_subnet {
              type ipv4_addr
              flags interval
              elements = { {{ subnet_value }} }
          }
      
          # Define chains
          chain input {
              type filter hook input priority 0; policy drop;
              
              # Allow established and related connections
              ct state established,related accept
              
              # Allow loopback traffic
              iif lo accept
              
              # Allow ICMP (ping)
              icmp type echo-request accept
              icmpv6 type echo-request accept
              
              # Allow SSH from local subnet only
              tcp dport 22 ip saddr @local_subnet accept
              
              # Allow specified TCP ports from anywhere
              tcp dport @allowed_tcp_ports accept
              
              # Log dropped packets
              log prefix "nftables dropped: " group 0
          }
      
          chain forward {
              type filter hook forward priority 0; policy drop;
              
              # Allow established and related connections
              ct state established,related accept
              
              # Log dropped packets
              log prefix "nftables forward dropped: " group 0
          }
      
          chain output {
              type filter hook output priority 0; policy accept;
              
              # Allow all outbound traffic
          }
      }
      
      # Enable NAT for outbound connections
      table inet nat {
          chain postrouting {
              type nat hook postrouting priority 100; policy accept;
              
              # Masquerade outbound connections
              oifname != lo masquerade
          }
      }
    dest: /etc/nftables.conf
    mode: '0644'
    force: yes
  vars:
    allowed_ports: "{{ allowed_ports | default([]) }}"
    local_subnet: "{{ subnet_value }}"

- name: Test nftables configuration
  shell: nft -c -f /etc/nftables.conf
  register: nft_test
  changed_when: false

- name: Display nftables test results
  debug:
    msg: "nftables configuration test: {{ 'PASSED' if nft_test.rc == 0 else 'FAILED' }}"
  when: nft_test is defined

- name: Apply nftables configuration
  shell: nft -f /etc/nftables.conf
  when: nft_test.rc == 0

- name: Verify firewall is active
  shell: nft list ruleset
  register: firewall_status
  changed_when: false

- name: Display firewall status
  debug:
    msg: |
      === FIREWALL STATUS ===
      {{ firewall_status.stdout }}
      
      === ALLOWED PORTS ===
      {% for port in allowed_ports %}
      - Port {{ port }}
      {% endfor %}
      
      === LOCAL SUBNET ===
      SSH allowed from: {{ local_subnet.stdout | default('192.168.1.0/24') }}

- name: Test SSH connectivity (local subnet)
  wait_for:
    host: "{{ ansible_default_ipv4.address }}"
    port: 22
    timeout: 10
  delegate_to: localhost
  ignore_errors: yes

- name: Display connectivity test results
  debug:
    msg: "SSH connectivity test: {{ 'SUCCESS' if ansible_check_mode else 'TESTED' }}" 