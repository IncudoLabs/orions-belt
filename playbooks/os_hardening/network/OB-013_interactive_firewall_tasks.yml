# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (c) 2025 - present Incudo Labs Inc.
#
# This file is part of Orion's Belt Project (https://github.com/IncudoLABS/orions-belt).
#
# Published by the IncudoLABS.
# Original author: Marko Sarunac <128757181+SaruWiz@users.noreply.github.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Script ID: OB-013

- name: Display detected services for user selection
  debug:
    msg: |
      === SELECT SERVICES TO ALLOW ===
      The following services were detected on your system:
      
      {% for line in port_service_mapping.stdout_lines %}
      {{ loop.index }}. {{ line }}
      {% endfor %}
      
      You will be prompted for each service. Answer 'y' to allow, 'n' to block.

- name: Initialize allowed services list
  set_fact:
    user_allowed_services: []
    user_allowed_ports: []

- name: Prompt user for each detected service
  pause:
    prompt: |
      Allow {{ item.split(':')[1] }} (port {{ item.split(':')[0] }})? (y/n):
  register: service_choice
  loop: "{{ port_service_mapping.stdout_lines }}"
  when: item.split(':')[0] not in always_allowed_ports

- name: Process user choices for services
  set_fact:
    user_allowed_services: "{{ user_allowed_services + [item.item.split(':')[1]] }}"
    user_allowed_ports: "{{ user_allowed_ports + [item.item.split(':')[0]] }}"
  when: 
    - item.item.split(':')[0] not in always_allowed_ports
    - item.user_input | lower == 'y'
  loop: "{{ service_choice.results | default([]) }}"

- name: Add always allowed services and ports
  set_fact:
    final_allowed_services: "{{ always_allowed_services + user_allowed_services | unique }}"
    final_allowed_ports: "{{ always_allowed_ports + user_allowed_ports | unique }}"

- name: Display final configuration
  debug:
    msg: |
      === FINAL FIREWALL CONFIGURATION ===
      Services to allow: {{ final_allowed_services | join(', ') }}
      Ports to allow: {{ final_allowed_ports | join(', ') }}

- name: Configure firewall with user selections
  include_tasks: configure_firewall_tasks.yml
  vars:
    allowed_services: "{{ final_allowed_services }}"
    allowed_ports: "{{ final_allowed_ports }}" 