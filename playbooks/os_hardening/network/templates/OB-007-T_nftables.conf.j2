{# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (c) 2025 - present Incudo Labs Inc.
#
# This file is part of Orion's Belt Project (https://github.com/IncudoLABS/orions-belt).
#
# Published by the IncudoLABS.
# Original author: Marko Sarunac <128757181+SaruWiz@users.noreply.github.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Template ID: OB-007-T
# Used by: OB-007
#}
#
# This file contains the configuration for nftables.
# It is used by the OB-008 (configure_firewall_tasks.yml) playbook.
#

#!/usr/sbin/nft -f

# Security Hardening Firewall Configuration
# Generated by Ansible Security Hardening Playbook
# Local subnet: {{ local_subnet }}

flush ruleset

# Define tables
table inet filter {
    # Define sets for allowed ports
    set allowed_tcp_ports {
        type inet_service
        flags interval
        auto-merge
        elements = {
            {% for port in allowed_ports %}
            {{ port }}{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    }

    # Define sets for local subnet
    set local_subnet {
        type ipv4_addr
        flags interval
        elements = { {{ local_subnet }} }
    }

    # Define chains
    chain input {
        type filter hook input priority 0; policy drop;
        
        # Allow established and related connections
        ct state established,related accept
        
        # Allow loopback traffic
        iif lo accept
        
        # Allow ICMP (ping)
        icmp type echo-request accept
        icmpv6 type echo-request accept
        
        # Allow SSH from local subnet only
        tcp dport 22 ip saddr @local_subnet accept
        
        # Allow specified TCP ports from anywhere
        tcp dport @allowed_tcp_ports accept
        
        # Log dropped packets
        log prefix "nftables dropped: " group 0
    }

    chain forward {
        type filter hook forward priority 0; policy drop;
        
        # Allow established and related connections
        ct state established,related accept
        
        # Log dropped packets
        log prefix "nftables forward dropped: " group 0
    }

    chain output {
        type filter hook output priority 0; policy accept;
        
        # Allow all outbound traffic
    }
}

# Enable NAT for outbound connections
table inet nat {
    chain postrouting {
        type nat hook postrouting priority 100; policy accept;
        
        # Masquerade outbound connections
        oifname != lo masquerade
    }
}

# Optional: Rate limiting for SSH
table inet filter {
    chain input {
        # Rate limit SSH connections to prevent brute force
        tcp dport 22 ip saddr @local_subnet limit rate 5/minute accept
    }
} 