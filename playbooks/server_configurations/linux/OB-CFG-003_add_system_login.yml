# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (c) 2023 - present Expiscor Group Inc.
#
# This file is part of Orion's Belt Project (https://github.com/IncudoLABS/orions-belt).
#
# Published by the IncudoLABS.
# Original author: Marko Sarunac <128757181+SaruWiz@users.noreply.github.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Playbook ID: OB-CFG-003

# Tasks for adding system login permissions
# This file contains only tasks and can be included by other playbooks
# Variables expected: idgroup, iduser

- name: Verify SSSD configuration file exists
  stat:
    path: /etc/sssd/sssd.conf
  register: sssd_config

- name: Fail if SSSD config doesn't exist
  fail:
    msg: "SSSD configuration file not found. Please run the AD join playbook first."
  when: not sssd_config.stat.exists

- name: Get current simple_allow_groups configuration
  shell: grep "^simple_allow_groups" /etc/sssd/sssd.conf || echo "simple_allow_groups ="
  register: current_groups
  changed_when: false

- name: Get current simple_allow_users configuration  
  shell: grep "^simple_allow_users" /etc/sssd/sssd.conf || echo "simple_allow_users ="
  register: current_users
  changed_when: false

- name: Debug current configuration
  debug:
    msg: 
      - "Current groups: {{ current_groups.stdout }}"
      - "Current users: {{ current_users.stdout }}"
      - "Adding group: {{ idgroup | default('none') }}"
      - "Adding user: {{ iduser | default('none') }}"

- name: Add group to simple_allow_groups
  block:
    - name: Check if group already exists in configuration
      set_fact:
        group_exists: "{{ idgroup in current_groups.stdout }}"

    - name: Update simple_allow_groups with new group
      lineinfile:
        path: /etc/sssd/sssd.conf
        regexp: '^simple_allow_groups\s*='
        line: "{{ current_groups.stdout.rstrip() }}{{ ',' if current_groups.stdout.rstrip().endswith('=') == false else '' }}{{ idgroup }}"
        state: present
      when: not group_exists

    - name: Display group addition result
      debug:
        msg: "{{ 'Group already exists in configuration' if group_exists else 'Group ' + idgroup + ' added successfully' }}"
  when: 
    - idgroup is defined 
    - idgroup != ""
    - idgroup | length > 0

- name: Add user to simple_allow_users
  block:
    - name: Check if user already exists in configuration
      set_fact:
        user_exists: "{{ iduser in current_users.stdout }}"

    - name: Update simple_allow_users with new user
      lineinfile:
        path: /etc/sssd/sssd.conf
        regexp: '^simple_allow_users\s*='
        line: "{{ current_users.stdout.rstrip() }}{{ ',' if current_users.stdout.rstrip().endswith('=') == false else '' }}{{ iduser }}"
        state: present
      when: not user_exists

    - name: Display user addition result
      debug:
        msg: "{{ 'User already exists in configuration' if user_exists else 'User ' + iduser + ' added successfully' }}"
  when: 
    - iduser is defined 
    - iduser != ""
    - iduser | length > 0

- name: Add group to sudoers (optional)
  block:
    - name: Prompt for sudo access
      pause:
        prompt: "Do you want to give sudo access to group '{{ idgroup }}'? (y/n)"
      register: sudo_prompt
      when: 
        - idgroup is defined 
        - idgroup != ""

    - name: Add group to sudoers file
      lineinfile:
        path: /etc/sudoers
        line: "%{{ idgroup }} ALL=(ALL) ALL"
        validate: "visudo -cf %s"
        state: present
      when: 
        - idgroup is defined 
        - idgroup != ""
        - sudo_prompt.user_input | lower == 'y'

    - name: Display sudo configuration result
      debug:
        msg: "Sudo access granted to group {{ idgroup }}"
      when: 
        - idgroup is defined 
        - idgroup != ""
        - sudo_prompt.user_input | lower == 'y'
  when: 
    - idgroup is defined 
    - idgroup != ""

- name: Restart services to apply changes
  block:
    - name: Restart SSSD service
      service:
        name: sssd
        state: restarted

    - name: Wait for SSSD to be ready
      wait_for:
        timeout: 10

    - name: Verify SSSD service status
      service:
        name: sssd
        state: started
      register: sssd_status

    - name: Display service status
      debug:
        msg: "SSSD service is {{ 'running' if sssd_status.state == 'started' else 'not running properly' }}"

- name: Test AD authentication (optional)
  block:
    - name: Prompt for authentication test
      pause:
        prompt: "Do you want to test AD authentication? (y/n)"
      register: test_prompt

    - name: Test group lookup
      command: "getent group '{{ idgroup }}'"
      register: group_test
      ignore_errors: yes
      when: 
        - test_prompt.user_input | lower == 'y'
        - idgroup is defined 
        - idgroup != ""

    - name: Test user lookup  
      command: "getent passwd '{{ iduser }}'"
      register: user_test
      ignore_errors: yes
      when: 
        - test_prompt.user_input | lower == 'y'
        - iduser is defined 
        - iduser != ""

    - name: Display test results
      debug:
        msg: 
          - "Group lookup: {{ 'SUCCESS' if group_test.rc == 0 else 'FAILED' }}"
          - "User lookup: {{ 'SUCCESS' if user_test.rc == 0 else 'FAILED' }}"
      when: test_prompt.user_input | lower == 'y'
  when: 
    - idgroup is defined or iduser is defined
    - (idgroup != "" and idgroup | length > 0) or (iduser != "" and iduser | length > 0) 